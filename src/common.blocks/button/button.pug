include ../arrow/arrow
include ../heading/heading


mixin button({text = 'click me', hasLink = false, isSubmit = false, link = 'change-me', modifiers = {isSecondary, withoutFrame, isLong, isHovered, textColor}, withJs = false} = {})
    -
        let className = 'button';
        let headingOptions = {
            text,
            type: 'inline',
            color: 'white'
        };

        if (hasLink) {
            headingOptions.type = 'h3';
        }

        if (modifiers.isSecondary) {
            className += ' button_secondary';
            headingOptions.color = 'purple';
        }
        if (modifiers.withoutFrame) {
            headingOptions.color = 'purple';
            className += ' button_without-frame';
        }
        if (modifiers.isLong) {
            className += ' button_long';
        }
        if (modifiers.isHovered) {
            className += ' button_hovered';
        }
        if (withJs) {
          className += ' js-button';
        }

        switch (modifiers.textColor) {
            case 'white':
                headingOptions.color = 'white';
                break;
            case 'purple':
                headingOptions.color = 'purple';
                break;
            case 'gray':
                headingOptions.color = 'gray';
                break;
            default:
                break;
        }

    if (hasLink)
        div(class=className)
            a(href=link).button__text
                +heading(headingOptions)
            .button__arrow
                +arrow({
                  type: 'forward',
                  color: 'white'
                })
    else
        button(class=className type=isSubmit ? 'submit' : 'button')
            span.button__text
                +heading(headingOptions)
            span.button__arrow
                +arrow({
                    type: 'forward',
                    color: 'white'
                })
